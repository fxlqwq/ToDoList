name: Build and Release APK

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'
        
    - name: Get dependencies
      run: flutter pub get
      
    - name: Analyze code
      run: flutter analyze
      
    - name: Run tests
      run: flutter test || echo "Tests failed, continuing build..."
      
    - name: Build APK (Debug)
      if: github.event_name == 'pull_request'
      run: flutter build apk --debug
      
    - name: Build APK (Release)
      if: github.event_name != 'pull_request'
      run: flutter build apk --release
      
    - name: Get version from pubspec.yaml
      id: version
      run: |
        version=$(grep "^version:" pubspec.yaml | sed 's/version: //' | sed 's/+.*//')
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "Version: $version"
        
    - name: Rename APK file
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          mv build/app/outputs/flutter-apk/app-debug.apk build/app/outputs/flutter-apk/TodoList-v${{ steps.version.outputs.version }}-debug.apk
        else
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/TodoList-v${{ steps.version.outputs.version }}-release.apk
        fi
        
    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: TodoList-APK-v${{ steps.version.outputs.version }}
        path: |
          build/app/outputs/flutter-apk/*.apk
        retention-days: 30
        
    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: TodoList v${{ steps.version.outputs.version }}
        body: |
          ## 📱 TodoList v${{ steps.version.outputs.version }}
          
          ### ✨ 新功能
          - 🎓 首次使用指南：5步交互式教程
          - 🔋 电池优化管理：自动申请后台运行权限
          - 🔐 智能权限申请：一次性申请所有必要权限
          - 💾 偏好设置系统：记住用户选择，避免重复提示
          - 📱 原生权限集成：Android原生电池优化权限处理
          
          ### 🚀 性能优化
          - 📈 通知可靠性：三重备用调度策略
          - 🛡️ 错误处理：全面的异常捕获和恢复机制
          - ⚡ 启动优化：智能的首次启动流程
          - 🔄 状态管理：优化的Provider状态管理
          
          ### 📋 安装说明
          1. 下载下方的 `TodoList-v${{ steps.version.outputs.version }}-release.apk` 文件
          2. 在Android设备上安装APK
          3. 首次启动时按照引导完成权限设置
          4. 享受智能的待办事项管理体验！
          
          ### 🔧 技术要求
          - Android 5.0+ (API Level 21+)
          - 允许安装未知来源应用
          - 建议允许后台运行以获得最佳通知体验
          
          ---
          
          **完整更新日志请查看 [README.md](https://github.com/fxlqwq/ToDoList-Notice-Flutter/blob/main/README.md)**
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build/app/outputs/flutter-apk/TodoList-v${{ steps.version.outputs.version }}-release.apk
        asset_name: TodoList-v${{ steps.version.outputs.version }}-release.apk
        asset_content_type: application/vnd.android.package-archive

  notify:
    name: Notify Build Status
    runs-on: ubuntu-latest
    needs: build
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.build.result == 'success'
      run: |
        echo "✅ APK build completed successfully!"
        echo "📱 Download the APK from the Actions artifacts section"
        
    - name: Notify Failure  
      if: needs.build.result == 'failure'
      run: |
        echo "❌ APK build failed!"
        echo "🔍 Check the build logs for error details"
